name: Backend CD

on:
  push:
    branches:
      - main
    paths:
      - 'starter/backend/**'

  workflow_dispatch:

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Install pipenv
        run: pip install pipenv  

      - name: Install dependencies
        working-directory: starter/backend
        run: pipenv install --dev

      - name: Run Linter
        working-directory: starter/backend
        run: pipenv run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Install pipenv
        run: pip install pipenv  

      - name: Install dependencies
        working-directory: starter/backend
        run: pipenv install --dev

      - name: Run Tests
        working-directory: starter/backend
        run: pipenv run test

  build_and_push:
    name: Build Docker Image & Push to ECR
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker Image
        working-directory: starter/backend
        run: docker build -t mp-backend:latest .

      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push Docker Image to ECR
        run: |
          docker tag mp-backend:latest ${{ secrets.BACKEND_ECR_REPOSITORY }}:latest
          docker push ${{ secrets.BACKEND_ECR_REPOSITORY }}:latest

  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Deploy to EKS using kustomize
        run: |
          cd starter/backend/k8s
          kustomize edit set image backend=${{ secrets.BACKEND_ECR_REPOSITORY }}:latest
          kustomize build | kubectl apply -f -