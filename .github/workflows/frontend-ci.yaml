name: Frontend CI

on:
  pull_request:
    branches:
      - main
    paths:
      - 'starter/frontend/**'

  workflow_dispatch:

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: starter/frontend/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        working-directory: starter/frontend
        run: npm ci

      - name: Run Linter
        working-directory: starter/frontend
        run: npm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: starter/frontend/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        working-directory: starter/frontend
        run: npm ci

      - name: Run Tests
        working-directory: starter/frontend
        run: CI=true npm test

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: starter/frontend/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        working-directory: starter/frontend
        run: npm ci

      - name: Build Docker Image
        working-directory: starter/frontend
        run: |
          docker build --build-arg REACT_APP_MOVIE_API_URL=$REACT_APP_MOVIE_API_URL -t mp-frontend:latest .

















