name: Frontend CD

on:
  push:
    branches:
      - main
    paths:
      - 'starter/frontend/**'

  workflow_dispatch:

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        working-directory: starter/frontend
        run: npm ci

      - name: Run Linter
        working-directory: starter/frontend
        run: npm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        working-directory: starter/frontend
        run: npm ci

      - name: Run Tests
        working-directory: starter/frontend
        run: CI=true npm test

  build_and_push:
    name: Build Docker Image & Push to ECR
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker Image
        working-directory: starter/frontend
        run: |
          docker build --build-arg REACT_APP_MOVIE_API_URL=$REACT_APP_MOVIE_API_URL -t mp-frontend:latest .

      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push to ECR
        run: |
          docker tag mp-frontend:latest ${{ secrets.FRONTEND_ECR_REPOSITORY }}:latest
          docker push ${{ secrets.FRONTEND_ECR_REPOSITORY }}:latest  

  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update Kubeconfig
        run: aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Export AWS Credentials
        run: |
            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            export AWS_REGION=${{ secrets.AWS_REGION }}

      - name: Deploy to EKS using kustomize
        run: |
          cd starter/frontend/k8s
          kustomize edit set image frontend=${{ secrets.FRONTEND_ECR_REPOSITORY }}:latest
          kustomize build | kubectl apply -f - --validate=false
